#+startup: overview
#+title: CHAPTER THREE
#+subtitle: BEFORE SHOOTING ANY DARTS

#+begin_comment
# in this chapter overview of dart programming language will be told.
# how dart desiged and why it is desiged this way. these explanations will
# be told to a person who has a enough understanding of object oriented
# programming and programming concepts overall. there shouldn't be any
# syntax here. just naming concepts names and if possible their cards from
# other books or notes. just saying concepts. for example we will tell about
# grammar is C like and everything is object even functions and null even
# premitive data types. we will tell about referenceing and variables and
# how dart store data and strings and numbers and how it operates on them.
# how dart type safety works and how type conversion works in dart.
# after explaining fundamentals
# we go to flow control and will tell flow control statements.
# in this chapter we tell fundamentals and in the next chapters we try
# to expand these concepts further more.
# why dart desiged this way
# what trade offs considered in dart
# syntactic sugars
# type safety
# type insurance?
# object oriented design of dart
# functional programming in dart
# dart's grammar is C like
# comments
# a little bit survey about grammar and syntax sugar

- dart design principles
- dart is pure object oriented language
- everything is object
- scope
- C like language
- comments
- functional capabilities
- syntax sugar
- type safety
- overall structure of dart program
- everything program related not execute related
#+end_comment

---------------

# preface

* LANGUAGE OVERVIEW
every programming language is made of a grammar and tools to translate a
program written in that grammar to a executable file. it is important for
a programming language to has some tools to facilitate the process of
programming for programmers.

if you look at a programming language grammar you find nothing but data
and some operations on data. data is represented by variables and operations
are represented by expressions and

in dart everything is an object. dart is pure object oriented.

dart is capable of functional programming.



# grammar > grammar overview
# data > variables
# operations > expressions, functions, flow of the operations
# comment
# Dart is Case-sensitive
# Statements end with a Semicolon
# Whitespace and Line Breaks Dart ignores spaces, tabs, and newlines that appear in programs. You can use spaces, tabs, and newlines freely in your program and you are free to format and indent your programs in a neat and consistent way that makes the code easy to read and understand.
# https://www.tutorialspoint.com/dart_programming/dart_programming_syntax.htm


* DART GRAMMAR OVERVIEW
# identifier naming rules, scopes


* DATA
variables

* OPERATIONS
functions control flow






* EVERYTHING IS AN OBJECT
* TYPE SYSTEM
